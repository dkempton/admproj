package classifierTests;

import org.junit.Test;

import classifier.SVMClassifier;
import dataselection.BasicSelection;

public class TestSvmClassifier {
	@Test(expected = IllegalArgumentException.class)
	public void testConstructorThrowsOnZeroLengthDataSet() {
		double[][] dataset = new double[0][10];
		new SVMClassifier(dataset, new BasicSelection(), null);
	}
	
	@Test(expected = IllegalArgumentException.class)
	public void testConstructorThrowsOnZeroWidthDataSet() {
		double[][] dataset = new double[10][0];
		new SVMClassifier(dataset, new BasicSelection(), null);
	}

	@Test(expected = IllegalArgumentException.class)
	public void testConstructorThrowsOnNullDataSet() {

	}

	@Test(expected = IllegalArgumentException.class)
	public void testConstructorThrowsOnNullSelector() {

	}

	@Test(expected = IllegalArgumentException.class)
	public void testConstructorThrowsOnUnevenDataset() {

	}

	@Test(expected = IllegalArgumentException.class)
	public void testAddTrainingDataThrowsOnZeroDataSet() {

	}

	@Test(expected = IllegalArgumentException.class)
	public void testAddTrainingDataThrowsOnNullDataSet() {

	}

	@Test(expected = IllegalArgumentException.class)
	public void testAddTestingDataThrowsOnZeroDataSet() {

	}

	@Test(expected = IllegalArgumentException.class)
	public void testAddTestingDataThrowsOnNullDataSet() {

	}

}
